{"version":3,"sources":["components/DynamicText.js","components/MainText.js","components/SubtitleText.js","components/FooterGraphic.js","components/TextBox.js","components/MainPage.js","components/Navbar.js","App.js","serviceWorker.js","index.js","footergraphic.svg"],"names":["DynamicText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","done","setState","typing","state","react_default","a","createElement","react","Typist_default","onTypingDone","className","map","word","key","Math","random","Delay","ms","Backspace","count","length","delay","Component","MainText","windowWidth","components_DynamicText","withStyles","textWhite","color","classes","index_es","gutterBottom","variant","FooterGraphic","alt","style","position","bottom","src","footergraphic","TextBox","_this$props","minHeight","display","flexDirection","justifyContent","alignItems","Typography_default","align","components_MainText","components_SubtitleText","Button_default","size","actionBtn","components_FooterGraphic","fontSize","padding","marginTop","bgMain","background","Grid_default","container","alignContent","item","xs","components_TextBox","root","flexGrow","grow","transparent","opacity","whiteText","AppBar_default","Toolbar_default","width","theme","createMuiTheme","palette","primary","main","secondary","contrastText","typography","fontFamily","useNextVariants","App","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","innerWidth","styles","components_Navbar","MainPage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"gVA6CeA,cAzCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,KAAO,WACLP,EAAKQ,SAAS,CAAEC,QAAQ,GAAS,WAC/BT,EAAKQ,SAAS,CAAEC,QAAQ,OAP1BT,EAAKU,MAAQ,CACXD,QAAQ,GAHOT,wEAqBjB,OACEW,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACGX,KAAKO,MAAMD,OACVE,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,aAAcb,KAAKI,KAAMU,UAAU,UAVnC,CACZ,6CACA,mDACA,2EACA,qEACA,wFAMaC,IAAI,SAAAC,GAAI,OACbR,EAAAC,EAAAC,cAAA,QAAMO,IAAKC,KAAKC,UACdX,EAAAC,EAAAC,cAACE,EAAAH,EAAOW,MAAR,CAAcC,GAAI,OAClBb,EAAAC,EAAAC,cAAA,gBAAQM,GACRR,EAAAC,EAAAC,cAACE,EAAAH,EAAOa,UAAR,CAAkBC,MAAOP,EAAKQ,OAAQC,MAAO,WAKnD,WAnCgBC,aCsBXC,mLAnBX,OADwB3B,KAAKJ,MAArBgC,YACU,IAEdpB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAf,4EACeN,EAAAC,EAAAC,cAAA,WADf,qBAGEF,EAAAC,EAAAC,cAACmB,EAAD,OAKFrB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAf,8FAEEN,EAAAC,EAAAC,cAACmB,EAAD,cAfaH,qBCkBRI,uBAjBA,iBAAO,CACpBC,UAAW,CACTC,MAAO,UAeIF,CAXM,SAAAlC,GAAS,IACpBqC,EAAYrC,EAAZqC,QACR,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKtB,UAAWmB,EAAQF,WACvDvB,EAAAC,EAAAC,cAAA,mPCFO2B,EAVO,WACpB,OACE7B,EAAAC,EAAAC,cAAA,OACE4B,IAAI,iBACJC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,KACvCC,IAAKC,OCYLC,cACJ,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjB/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KAMRQ,KAAO,WACLP,EAAKQ,SAAS,CAAEC,QAAQ,GAAS,WAC/BT,EAAKQ,SAAS,CAAEC,QAAQ,OAP1BT,EAAKU,MAAQ,CACXD,QAAQ,GAHOT,wEAaV,IAAAgD,EAC0B7C,KAAKJ,MAA9BqC,EADDY,EACCZ,QAASL,EADViB,EACUjB,YACjB,OACEpB,EAAAC,EAAAC,cAAA,OACE6B,MAAO,CACLO,UAAW,QACXC,QAAS,OACTP,SAAU,WACVQ,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAGd1C,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CACE0B,cAAY,EACZrB,UAAWmB,EAAQF,UACnBK,QAAQ,KACRJ,MAAM,gBACNoB,MAAM,UAEN5C,EAAAC,EAAAC,cAAC2C,EAAD,CAAUzB,YAAaA,KAEzBpB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CACE+C,KAAK,QACLpB,QAAQ,YACRJ,MAAM,YACNlB,UAAWmB,EAAQwB,WAJrB,kFAQAjD,EAAAC,EAAAC,cAACgD,EAAD,cA9CchC,aAoDPI,uBAhEA,iBAAO,CACpBC,UAAW,CACTC,MAAO,QAETyB,UAAW,CACTzB,MAAO,OACP2B,SAAU,SACVC,QAAS,WACTC,UAAW,UAwDA/B,CAAmBc,oBC3CnBd,uBAxBA,CACbgC,OAAQ,CACNC,WAAY,YAsBDjC,CAlBE,SAAAlC,GAAS,IAChBqC,EAAyBrC,EAAzBqC,QAASL,EAAgBhC,EAAhBgC,YACjB,OACEpB,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEwD,WAAS,EACTC,aAAa,SACbhB,WAAW,SACXpC,UAAWmB,EAAQ6B,QAEnBtD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAM0D,MAAI,EAACC,IAAE,GACX5D,EAAAC,EAAAC,cAAC2D,EAAD,CAASzC,YAAaA,2DCkBjBE,2BAjCA,CACbwC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,YAAa,CACXC,QAAS,GAEXC,UAAW,CACT3C,MAAO,OACP2B,SAAU,WAqBC7B,CAjBf,SAAgBlC,GAAO,IACbqC,EAAYrC,EAAZqC,QACR,OACEzB,EAAAC,EAAAC,cAAA,OAAKI,UAAWmB,EAAQqC,MACtB9D,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAQ+B,SAAS,QAAQD,MAAO,CAAEwB,WAAY,YAC5CvD,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKgC,IAAI,aAAaJ,IAAI,SAASwC,MAAM,UACzCtE,EAAAC,EAAAC,cAAA,OAAKI,UAAWmB,EAAQuC,OACxBhE,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,CAAQ2B,QAAQ,WAAWJ,MAAM,aAC/BxB,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAYK,UAAWmB,EAAQ0C,WAA/B,6ECzBNI,EAAQC,yBAAe,CAC3BC,QAAS,CACPC,QAAS,CAEPC,KAAM,WAIRC,UAAW,CACTD,KAAM,UAENE,aAAc,SAIlBC,WAAY,CAEVC,WAAY,gBACZC,iBAAiB,KAsCNC,cAjCb,SAAAA,EAAY7F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACjB5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KACDW,MAAQ,CACXuE,MAAO,GAETjF,EAAK6F,uBAAyB7F,EAAK6F,uBAAuBC,KAA5B7F,OAAA8F,EAAA,EAAA9F,QAAA8F,EAAA,EAAA9F,CAAAD,KALbA,mFASjBG,KAAK0F,yBACLG,OAAOC,iBAAiB,SAAU9F,KAAK0F,uEAIvCG,OAAOE,oBAAoB,SAAU/F,KAAK0F,yEAI1C1F,KAAKK,SAAS,CAAEyE,MAAOe,OAAOG,8CAI9B,OACExF,EAAAC,EAAAC,cAACuF,EAAA,iBAAD,CAAkBlB,MAAOA,GACvBvE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAACwF,EAAD,MACA1F,EAAAC,EAAAC,cAACyF,EAAD,CAAUvE,YAAa5B,KAAKO,MAAMuE,iBA3B1BpD,aCjBE0E,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.6c8b9d65.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Typist from 'react-typist';\r\n\r\nclass DynamicText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      typing: true\r\n    };\r\n  }\r\n\r\n  done = () => {\r\n    this.setState({ typing: false }, () => {\r\n      this.setState({ typing: true });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const words = [\r\n      'การตลาด',\r\n      'ลงประกาศ',\r\n      'โฆษณาออนไลน์',\r\n      'ประเมินราคา',\r\n      'จัดการสินเชื่อ'\r\n    ];\r\n    return (\r\n      <Fragment>\r\n        {this.state.typing ? (\r\n          <Typist onTypingDone={this.done} className=\"inline\">\r\n            {words.map(word => (\r\n              <span key={Math.random()}>\r\n                <Typist.Delay ms={1500} />\r\n                <span> {word}</span>\r\n                <Typist.Backspace count={word.length} delay={1500} />\r\n              </span>\r\n            ))}\r\n          </Typist>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DynamicText;\r\n","import React, { Component } from 'react';\r\nimport DynamicText from './DynamicText';\r\n\r\nclass MainText extends Component {\r\n  render() {\r\n    const { windowWidth } = this.props;\r\n    if (windowWidth < 768) {\r\n      return (\r\n        <div className=\"main-text\">\r\n          ฝากขายวันนี้ <br />\r\n          ฟรี\r\n          <DynamicText />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"main-text\">\r\n          ฝากขายวันนี้ ฟรี\r\n          <DynamicText />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MainText;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = () => ({\r\n  textWhite: {\r\n    color: '#fff'\r\n  }\r\n});\r\n\r\nconst SubtitleText = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Typography gutterBottom variant=\"h5\" className={classes.textWhite}>\r\n        <div>จ่ายเบาๆเพียง 3% จากราคาซื้อขายจริง</div>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SubtitleText);\r\n","import React from 'react';\r\nimport footergraphic from '../footergraphic.svg';\r\n\r\nconst FooterGraphic = () => {\r\n  return (\r\n    <img\r\n      alt=\"footerGraphics\"\r\n      style={{ position: 'absolute', bottom: '0' }}\r\n      src={footergraphic}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FooterGraphic;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MainText from './MainText';\r\nimport SubtitleText from './SubtitleText';\r\nimport Button from '@material-ui/core/Button';\r\nimport FooterGraphic from './FooterGraphic';\r\n\r\nconst styles = () => ({\r\n  textWhite: {\r\n    color: '#fff'\r\n  },\r\n  actionBtn: {\r\n    color: '#000',\r\n    fontSize: '1.5rem',\r\n    padding: '6px 16px',\r\n    marginTop: '3rem'\r\n  }\r\n});\r\n\r\nclass TextBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      typing: true\r\n    };\r\n  }\r\n\r\n  done = () => {\r\n    this.setState({ typing: false }, () => {\r\n      this.setState({ typing: true });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, windowWidth } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: '100vh',\r\n          display: 'flex',\r\n          position: 'relative',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <Typography\r\n          gutterBottom\r\n          className={classes.textWhite}\r\n          variant=\"h2\"\r\n          color=\"textSecondary\"\r\n          align=\"center\"\r\n        >\r\n          <MainText windowWidth={windowWidth} />\r\n        </Typography>\r\n        <br />\r\n        <SubtitleText />\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.actionBtn}\r\n        >\r\n          ฝากขายอสังหาฯ\r\n        </Button>\r\n        <FooterGraphic />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TextBox);\r\n","import React, { Fragment } from 'react';\r\nimport TextBox from './TextBox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  bgMain: {\r\n    background: '#00314E'\r\n  }\r\n};\r\n\r\nconst Mainpage = props => {\r\n  const { classes, windowWidth } = props;\r\n  return (\r\n    <Fragment>\r\n      <Grid\r\n        container\r\n        alignContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.bgMain}\r\n      >\r\n        <Grid item xs>\r\n          <TextBox windowWidth={windowWidth} />\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Mainpage);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  transparent: {\r\n    opacity: 0\r\n  },\r\n  whiteText: {\r\n    color: '#fff',\r\n    fontSize: '1.2rem'\r\n  }\r\n};\r\n\r\nfunction Navbar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" style={{ background: '#00314E' }}>\r\n        <Toolbar>\r\n          <img src=\"ablogo.png\" alt=\"ablogo\" width=\"100px\" />\r\n          <div className={classes.grow} />\r\n          <Button variant=\"outlined\" color=\"secondary\">\r\n            <Typography className={classes.whiteText}> ลงประกาศฟรี</Typography>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","import React, { Component } from 'react';\nimport Mainpage from './components/MainPage';\nimport './App.css';\nimport './Cursor.scss';\nimport Navbar from './components/Navbar';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#00314E'\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      main: '#F4CF3A',\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: '#fff'\n    }\n    // error: will use the default color\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: 'ThaiSans Neue',\n    useNextVariants: true\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Navbar />\n          <Mainpage windowWidth={this.state.width} />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/footergraphic.a9ecd07f.svg\";"],"sourceRoot":""}